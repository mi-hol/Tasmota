name: Build_firmware_user

on:
  workflow_dispatch:      # Start a workflow
  push:
    paths-ignore:
    - '.github/**'        # Ignore changes towards the .github directory
    - '**.md'             # Do no build if *.md files changes

# Ensures that only one deploy task per branch/environment will run at a time.
concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: true

jobs:
  safeboot-images:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        variant:
          - tasmota32-safeboot
          - tasmota32solo1-safeboot
          - tasmota32c2-safeboot
          - tasmota32c3-safeboot
          - tasmota32c3ser-safeboot
          - tasmota32s2-safeboot
          - tasmota32s2cdc-safeboot
          - tasmota32s3-safeboot
          - tasmota32s3ser-safeboot
          - tasmota32c6-safeboot
          - tasmota32c6ser-safeboot
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install wheel
          pip install -U platformio
      - name: Add "release" to footer
        run: |
          sed -i -e "s/TASMOTA_SHA_SHORT/TASMOTA_SHA_SHORT release-/g" ./tasmota/include/tasmota_version.h
      - name: Run PlatformIO
        run: platformio run -e ${{ matrix.variant }}
      - name: Upload safeboot firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.variant }}
          path: ./build_output

  base-images:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        variant:
          - tasmota
          - tasmota-4M
          - tasmota-minimal
          - tasmota-display
          - tasmota-ir
          - tasmota-knx
          - tasmota-lite
          - tasmota-sensors
          - tasmota-zbbridge
          - tasmota-zigbee
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install wheel
          pip install -U platformio
      - name: Add "release" to footer
        run: |
          sed -i -e "s/TASMOTA_SHA_SHORT/TASMOTA_SHA_SHORT release-/g" ./tasmota/include/tasmota_version.h
      - name: Run PlatformIO
        run: platformio run -e ${{ matrix.variant }}
      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.variant }}
          path: ./build_output

  base32-images:
    needs: safeboot-images
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        variant:
          - tasmota32
          - tasmota32-zbbrdgpro
          - tasmota32-webcam
          - tasmota32-bluetooth
          - tasmota32-nspanel
          - tasmota32-display
          - tasmota32-ir
          - tasmota32-lvgl
          - tasmota32c2
          - tasmota32c3
          - tasmota32c6
          - tasmota32s2
          - tasmota32s2cdc
          - tasmota32s3
          - tasmota32solo1
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install wheel
          pip install -U platformio
      - name: Download safeboot firmwares
        uses: actions/download-artifact@v4
        with:
          pattern: tasmota32*
          path: ./temp
      - name: Move safeboot files
        run: |
          mkdir -p ./firmware/firmware
          find ./temp -type f -exec cp -t ./firmware/firmware {} +
      - name: Add "release" to footer
        run: |
          sed -i -e "s/TASMOTA_SHA_SHORT/TASMOTA_SHA_SHORT release-/g" ./tasmota/include/tasmota_version.h
      - name: Run PlatformIO
        run: platformio run -e ${{ matrix.variant }}
      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.variant }}
          path: ./build_output

  language-images:
    needs: safeboot-images
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        variant: [ tasmota, tasmota32 ]
        language: [ AD, AF, BG, BR, CN, CZ, DE, ES, FR, FY, GR, HE, HU, IT, KO, LT, NL, PL, PT, RO, RU, SE, SK, TR, TW, UK, VN ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install wheel
          pip install -U platformio
      - name: Download safeboot firmwares
        uses: actions/download-artifact@v4
        with:
          pattern: tasmota32*
          path: ./temp
      - name: Move safeboot files
        run: |
          mkdir -p ./firmware/firmware
          find ./temp -type f -exec cp -t ./firmware/firmware {} +
      - name: Add "release" to footer
        run: |
          sed -i -e "s/TASMOTA_SHA_SHORT/TASMOTA_SHA_SHORT release-/g" ./tasmota/include/tasmota_version.h
      - name: Run PlatformIO
        run: platformio run -e ${{ matrix.variant }}-${{ matrix.language }}
      - name: Upload language firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.variant }}-${{ matrix.language }}
          path: ./build_output

  Release:
    needs: [base-images, base32-images, language-images]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v4
    - name: Download all Tasmota artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: tasmota*
        path: ./temp
    - name: Move files
      run: |
        mkdir -p ./release
        find ./temp -type f -exec cp -t ./release {} +
    - name: Display structure of downloaded files
      run: ls -R ./release/
    - name: Release
      uses: jason2866/action-gh-release@v1.2
      #if: startsWith(github.ref, 'refs/tags/')
      with:
        tag_name: ${{ github.run_number }}
        files: |
          ./release/tasmota*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
